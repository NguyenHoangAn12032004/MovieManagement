@model IEnumerable<MovieManagement.Models.Movie>

@{
    ViewData["Title"] = "Quản lý phim";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@section Styles {
    <style>
        .genre-tags {
            max-width: 200px;
        }
        
        .genre-tags .badge {
            font-size: 0.75rem;
            white-space: nowrap;
        }
        
        .table td {
            vertical-align: middle;
        }
        
        .form-check-label {
            font-size: 0.875rem;
        }
        
        .btn-group .btn {
            padding: 0.25rem 0.5rem;
        }
    </style>
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mt-4">Quản lý phim</h1>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle me-2"></i>Thêm phim mới
        </a>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Danh sách phim
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="moviesTable" class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Poster</th>
                            <th>Tiêu đề</th>
                            <th>Thể loại</th>
                            <th>Ngày phát hành</th>
                            <th>Thời lượng</th>
                            <th>Trạng thái</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Id</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.PosterPath))
                                    {
                                        <img src="@item.PosterPath" alt="@item.Title" class="img-thumbnail" style="max-width: 60px;">
                                    }
                                    else
                                    {
                                        <span class="text-muted">Không có ảnh</span>
                                    }
                                </td>
                                <td>@item.Title</td>
                                <td>
                                    @{
                                        var genreNames = new List<string>();
                                        
                                        // First, try to get genres from MovieGenres relationship
                                        if (item.MovieGenres != null && item.MovieGenres.Any())
                                        {
                                            genreNames = item.MovieGenres.Select(mg => mg.Genre.Name).ToList();
                                        }
                                        // Fallback to single Genre relationship
                                        else if (item.Genre != null)
                                        {
                                            genreNames.Add(item.Genre.Name);
                                        }
                                        // Fallback to GenreNames JSON string
                                        else if (!string.IsNullOrEmpty(item.GenreNames))
                                        {
                                            try
                                            {
                                                var genres = System.Text.Json.JsonSerializer.Deserialize<List<string>>(item.GenreNames);
                                                if (genres != null && genres.Any())
                                                {
                                                    genreNames = genres;
                                                }
                                            }
                                            catch
                                            {
                                                genreNames.Add(item.GenreNames);
                                            }
                                        }
                                    }
                                    
                                    @if (genreNames.Any())
                                    {
                                        <div class="genre-tags">
                                            @foreach (var genre in genreNames)
                                            {
                                                <span class="badge bg-primary me-1 mb-1">@genre</span>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted fst-italic">Chưa phân loại</span>
                                    }
                                </td>
                                <td>@item.ReleaseDate.ToString("dd/MM/yyyy")</td>
                                <td>@item.Duration phút</td>
                                <td>
                                    <div class="d-flex flex-column gap-1 mb-2">
                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" id="featured_@item.Id" 
                                                   @(item.IsFeatured ? "checked" : "") 
                                                   onchange="changeStatus(@item.Id, 'featured', this.checked)">
                                            <label class="form-check-label" for="featured_@item.Id">Phim nổi bật</label>
                                        </div>
                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" id="nowshowing_@item.Id" 
                                                   @(item.IsNowShowing ? "checked" : "") 
                                                   onchange="changeStatus(@item.Id, 'nowshowing', this.checked)">
                                            <label class="form-check-label" for="nowshowing_@item.Id">Đang chiếu</label>
                                        </div>
                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" id="comingsoon_@item.Id" 
                                                   @(item.IsComingSoon ? "checked" : "") 
                                                   onchange="changeStatus(@item.Id, 'comingsoon', this.checked)">
                                            <label class="form-check-label" for="comingsoon_@item.Id">Sắp chiếu</label>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="Sửa">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" title="Chi tiết">
                                            <i class="bi bi-info-circle"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="Xóa">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#moviesTable').DataTable({
                order: [[0, 'asc']],
                columnDefs: [
                    { type: 'num', targets: 0 } // Xử lý cột ID (cột đầu tiên) như kiểu số
                ]
            });
            
            // Initialize toastr
            toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "timeOut": "3000"
            };
        });
        
        function changeStatus(id, statusType, value) {
            // Auto-toggle conflicting statuses
            if (value) { // Only when turning ON
                if (statusType === 'nowshowing' && $('#comingsoon_' + id).is(':checked')) {
                    // Turn off Coming Soon when Now Showing is turned on
                    $('#comingsoon_' + id).prop('checked', false);
                    // Also send AJAX request to update Coming Soon status in database
                    updateMovieStatus(id, 'comingsoon', false, false);
                }
                else if (statusType === 'comingsoon' && $('#nowshowing_' + id).is(':checked')) {
                    // Turn off Now Showing when Coming Soon is turned on
                    $('#nowshowing_' + id).prop('checked', false);
                    // Also send AJAX request to update Now Showing status in database
                    updateMovieStatus(id, 'nowshowing', false, false);
                }
            }
            
            // Update status of clicked checkbox
            updateMovieStatus(id, statusType, value, true);
        }
        
        // Function to update movie status in database
        function updateMovieStatus(id, statusType, value, showNotification) {
            $.ajax({
                url: '@Url.Action("ChangeStatus")',
                type: 'POST',
                data: {
                    id: id,
                    statusType: statusType,
                    value: value,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(result) {
                    if (result.success) {
                        if (showNotification) {
                            toastr.success(result.message || 'Trạng thái đã được cập nhật thành công');
                        }
                    } else {
                        toastr.error(result.message || 'Có lỗi xảy ra khi cập nhật trạng thái');
                        // Revert the checkbox state
                        $('#' + statusType + '_' + id).prop('checked', !value);
                    }
                },
                error: function(error) {
                    toastr.error('Có lỗi xảy ra khi cập nhật trạng thái');
                    console.error(error);
                    // Revert the checkbox if update failed
                    $('#' + statusType + '_' + id).prop('checked', !value);
                }
            });
        }
    </script>
    
    <form id="antiForgeryForm">
        @Html.AntiForgeryToken()
    </form>
}