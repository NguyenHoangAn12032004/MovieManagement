@model IEnumerable<MovieManagement.Models.Concession>

@{
    ViewData["Title"] = "Quản lý Bắp Nước";
}

@section Styles {
    <style>
        body, .container-fluid {
            background: #f8f9fa !important;
        }
        .concession-header {
            background: #fff;
            border-radius: 18px;
            box-shadow: 0 4px 24px rgba(0,0,0,0.07);
            border: 1px solid #e9ecef;
            padding: 2.5rem 2rem 2rem 2rem;
            margin-bottom: 2.5rem;
        }
        .concession-header h1 {
            font-size: 2.2rem;
            font-weight: bold;
            color: #2d3a4b;
            margin-bottom: 0.5rem;
        }
        .concession-header p {
            color: #6c757d;
            font-size: 1.1rem;
        }
        .concession-header .btn {
            border-radius: 8px;
            font-weight: 600;
            padding: 0.7rem 1.7rem;
        }
        .concession-stats {
            display: flex;
            gap: 1.5rem;
            margin-bottom: 2rem;
            flex-wrap: wrap;
        }
        .concession-stat-card {
            background: #fff;
            border-radius: 14px;
            box-shadow: 0 2px 12px rgba(0,0,0,0.06);
            border: 1px solid #e9ecef;
            flex: 1 1 200px;
            min-width: 180px;
            padding: 1.2rem 1rem;
            text-align: center;
        }
        .concession-stat-card .stat-number {
            font-size: 1.5rem;
            font-weight: bold;
            color: #007bff;
        }
        .concession-stat-card .stat-label {
            color: #6c757d;
            font-size: 1rem;
        }
        .concession-filter-section {
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 2px 12px rgba(0,0,0,0.06);
            border: 1px solid #e9ecef;
            padding: 1.2rem 1rem;
            margin-bottom: 2rem;
        }
        .products-container {
            background: #fff;
            border-radius: 16px;
            box-shadow: 0 4px 24px rgba(0,0,0,0.07);
            border: 1px solid #e9ecef;
            padding: 2rem 1.5rem;
        }
        .products-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #2d3a4b;
            margin-bottom: 1.5rem;
        }
        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 1.5rem;
        }
        .product-card {
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 2px 12px rgba(0,0,0,0.08);
            border: 1px solid #e9ecef;
            transition: transform 0.2s, box-shadow 0.2s;
            overflow: hidden;
        }
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 24px rgba(0,0,0,0.12);
        }
        .product-img-container {
            width: 100%;
            height: 200px;
            overflow: hidden;
            position: relative;
            background: #f8f9fa;
        }
        .product-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .product-details {
            padding: 1.2rem;
        }
        .product-name {
            font-size: 1.1rem;
            font-weight: 600;
            color: #2d3a4b;
            margin-bottom: 0.3rem;
        }
        .product-id {
            font-size: 0.85rem;
            color: #6c757d;
            margin-bottom: 0.8rem;
        }
        .product-desc {
            color: #6c757d;
            font-size: 0.95rem;
            margin-bottom: 1rem;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            height: 42px;
        }
        .product-price {
            font-size: 1.2rem;
            font-weight: bold;
            color: #007bff;
            margin-bottom: 1rem;
        }
        .product-status {
            font-weight: 500;
            border-radius: 12px;
            padding: 0.3rem 0.9rem;
            display: inline-block;
            margin-bottom: 1rem;
        }
        .product-status.available {
            background: #e6f4ea;
            color: #198754;
        }
        .product-status.unavailable {
            background: #fbeaea;
            color: #dc3545;
        }
        .product-actions {
            display: flex;
            gap: 0.5rem;
            justify-content: flex-end;
            border-top: 1px solid #e9ecef;
            padding-top: 1rem;
        }
        .btn {
            border-radius: 8px !important;
            font-weight: 500;
            box-shadow: 0 1px 4px rgba(0,0,0,0.06);
        }
        .no-products {
            text-align: center;
            padding: 3rem;
            color: #6c757d;
        }
    </style>
}

<div class="container-fluid px-4">
    <!-- Header Section -->
    <div class="concession-header d-flex justify-content-between align-items-center flex-wrap">
        <div>
            <h1><i class="fas fa-utensils me-3 text-primary"></i>Quản lý Bắp Nước</h1>
            <p>Quản lý tất cả sản phẩm bắp nước và đồ uống trong rạp chiếu phim</p>
        </div>
        <div>
            <a href="@Url.Action("Create")" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>Thêm sản phẩm
            </a>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="concession-stats">
        <div class="concession-stat-card">
            <div class="stat-number">@Model.Count()</div>
            <div class="stat-label">Tổng sản phẩm</div>
        </div>
        <div class="concession-stat-card">
            <div class="stat-number">@Model.Count(c => c.IsAvailable)</div>
            <div class="stat-label">Đang bán</div>
        </div>
        <div class="concession-stat-card">
            <div class="stat-number">@Model.Count(c => !c.IsAvailable)</div>
            <div class="stat-label">Ngừng bán</div>
        </div>
        <div class="concession-stat-card">
            <div class="stat-number">@(Model.Any() ? Model.Average(c => c.Price).ToString("N0") : "0")</div>
            <div class="stat-label">Giá TB (₫)</div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="concession-filter-section row g-3 align-items-center">
        <div class="col-lg-4">
            <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm sản phẩm...">
        </div>
        <div class="col-lg-3">
            <select id="statusFilter" class="form-select">
                <option value="">Tất cả trạng thái</option>
                <option value="available">Đang bán</option>
                <option value="unavailable">Ngừng bán</option>
            </select>
        </div>
        <div class="col-lg-3">
            <select id="priceFilter" class="form-select">
                <option value="">Tất cả giá</option>
                <option value="0-50000">0 - 50,000₫</option>
                <option value="50000-100000">50,000 - 100,000₫</option>
                <option value="100000-200000">100,000 - 200,000₫</option>
                <option value="200000+">Trên 200,000₫</option>
            </select>
        </div>
        <div class="col-lg-2">
            <button type="button" class="btn btn-outline-secondary w-100" onclick="clearFilters()">
                <i class="fas fa-eraser me-2"></i>Xóa lọc
            </button>
        </div>
    </div>

    <!-- Products Grid -->
    <div class="products-container">
        <div class="products-title"><i class="fas fa-th-large me-2"></i>Danh sách sản phẩm</div>
        <div class="products-grid" id="productsGrid">
            @foreach (var item in Model)
            {
                <div class="product-card" data-name="@item.Name.ToLower()"
                     data-status="@(item.IsAvailable ? "available" : "unavailable")"
                     data-price="@item.Price">
                    <div class="product-img-container">
                        @if (!string.IsNullOrEmpty(item.ImagePath))
                        {
                            <img src="@item.ImagePath" alt="@item.Name" class="product-img">
                        }
                        else
                        {
                            <div class="product-img d-flex align-items-center justify-content-center">
                                <i class="fas fa-image text-muted fa-3x"></i>
                            </div>
                        }
                    </div>
                    <div class="product-details">
                        <div class="product-name">@item.Name</div>
                        <div class="product-id">ID: @item.Id</div>
                        <div class="product-desc">
                            @if (!string.IsNullOrEmpty(item.Description))
                            {
                                @item.Description
                            }
                        </div>
                        <div class="product-price">@item.Price.ToString("N0") ₫</div>
                        <span class="product-status @(item.IsAvailable ? "available" : "unavailable")">
                            @(item.IsAvailable ? "Đang bán" : "Ngừng bán")
                        </span>
                        <div class="product-actions">
                            <a href="@Url.Action("Edit", new { id = item.Id })" 
                               class="btn btn-sm btn-info" 
                               data-bs-toggle="tooltip" 
                               data-bs-placement="top" 
                               title="Chỉnh sửa sản phẩm">
                                <i class="fas fa-edit me-1"></i>
                                <span>Sửa</span>
                            </a>
                            <a href="@Url.Action("Details", new { id = item.Id })" 
                               class="btn btn-sm btn-primary" 
                               data-bs-toggle="tooltip" 
                               data-bs-placement="top" 
                               title="Xem chi tiết sản phẩm">
                                <i class="fas fa-info-circle me-1"></i>
                                <span>Chi tiết</span>
                            </a>
                            <a href="@Url.Action("Delete", new { id = item.Id })" 
                               class="btn btn-sm btn-danger" 
                               data-bs-toggle="tooltip" 
                               data-bs-placement="top" 
                               title="Xóa sản phẩm">
                                <i class="fas fa-trash me-1"></i>
                                <span>Xóa</span>
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
        @if (!Model.Any())
        {
            <div class="no-products">
                <i class="fas fa-box-open fa-3x mb-3"></i>
                <h4>Không có sản phẩm nào</h4>
                <p>Hãy thêm sản phẩm mới để bắt đầu.</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function filterProducts() {
            const searchTerm = $('#searchInput').val().toLowerCase();
            const statusFilter = $('#statusFilter').val();
            const priceFilter = $('#priceFilter').val();

            $('.product-card').each(function() {
                const $product = $(this);
                const name = $product.data('name');
                const status = $product.data('status');
                const price = $product.data('price');

                let show = true;

                // Search filter
                if (searchTerm && !name.includes(searchTerm)) {
                    show = false;
                }

                // Status filter
                if (statusFilter && status !== statusFilter) {
                    show = false;
                }

                // Price filter
                if (priceFilter) {
                    const [min, max] = priceFilter.split('-').map(v => v === '+' ? Infinity : Number(v));
                    if (price < min || (max && price > max)) {
                        show = false;
                    }
                }

                $product.toggle(show);
            });

            // Show/hide no results message
            const visibleProducts = $('.product-card:visible').length;
            if (visibleProducts === 0) {
                if (!$('.no-results').length) {
                    $('#productsGrid').after(`
                        <div class="no-results no-products">
                            <i class="fas fa-search fa-3x mb-3"></i>
                            <h4>Không tìm thấy sản phẩm</h4>
                            <p>Thử thay đổi bộ lọc để tìm kiếm lại.</p>
                        </div>
                    `);
                }
            } else {
                $('.no-results').remove();
            }
        }

        function clearFilters() {
            $('#searchInput').val('');
            $('#statusFilter').val('');
            $('#priceFilter').val('');
            filterProducts();
        }

        $(document).ready(function() {
            $('#searchInput').on('input', filterProducts);
            $('#statusFilter, #priceFilter').on('change', filterProducts);
            
            // Initialize Bootstrap tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
        });
    </script>
}
