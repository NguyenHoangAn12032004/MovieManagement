@model List<Movie>
@{
    ViewData["Title"] = "Phim Sắp Chiếu";
}

<!-- Hero Section -->
<div class="coming-soon-hero position-relative overflow-hidden">
    <div class="hero-background"></div>
    <div class="hero-overlay"></div>
    <div class="hero-particles" id="particles-js"></div>
    <div class="container position-relative py-5">
        <div class="hero-content text-center text-white py-5">
            <div class="hero-header mb-4">
                <div class="hero-icon animate__animated animate__fadeIn animate__delay-1s">
                    <i class="fas fa-film fa-3x mb-3"></i>
                </div>
                <h1 class="hero-title display-3 fw-bold mb-3 animate__animated animate__fadeInDown">
                    Phim Sắp Chiếu
                </h1>
                <p class="hero-subtitle lead mb-4 animate__animated animate__fadeInUp animate__delay-1s">
                    Khám phá những bộ phim hấp dẫn sắp ra mắt tại rạp của chúng tôi
                </p>
            </div>
            <div class="hero-search animate__animated animate__fadeInUp animate__delay-2s">
                <div class="search-wrapper mx-auto" style="max-width: 600px;">
                    <div class="search-container">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" class="search-input" placeholder="Tìm kiếm phim..." id="movieSearch">
                    </div>
                </div>
            </div>
            <div class="filter-tags mt-5 animate__animated animate__fadeInUp animate__delay-3s">
                <button class="btn btn-outline-light btn-lg rounded-pill me-3 mb-3 filter-btn active" data-filter="all">
                    <i class="fas fa-border-all me-2"></i>Tất cả
                </button>
                <button class="btn btn-outline-light btn-lg rounded-pill me-3 mb-3 filter-btn" data-filter="action">
                    <i class="fas fa-running me-2"></i>Hành động
                </button>
                <button class="btn btn-outline-light btn-lg rounded-pill me-3 mb-3 filter-btn" data-filter="comedy">
                    <i class="fas fa-laugh me-2"></i>Hài
                </button>
                <button class="btn btn-outline-light btn-lg rounded-pill me-3 mb-3 filter-btn" data-filter="drama">
                    <i class="fas fa-theater-masks me-2"></i>Tâm lý
                </button>
                <button class="btn btn-outline-light btn-lg rounded-pill me-3 mb-3 filter-btn" data-filter="scifi">
                    <i class="fas fa-robot me-2"></i>Khoa học viễn tưởng
                </button>
            </div>
        </div>
    </div>
</div>

<div class="container my-5">
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4" id="movieGrid">
        @foreach (var movie in Model)
        {
            <div class="col movie-item" data-genres="@string.Join(",", movie.GenreIds)">
                <div class="movie-card h-100">
                    <div class="movie-poster-container position-relative overflow-hidden rounded-top">
                        @if (movie.PosterPath.StartsWith("/images/placeholder"))
                        {
                            <div class="movie-poster-placeholder d-flex align-items-center justify-content-center">
                                <i class="fas fa-film fa-3x mb-2"></i>
                                <span class="text-center px-3">@movie.Title</span>
                            </div>
                        }
                        else
                        {
                            <img src="@movie.PosterPath" alt="@movie.Title" class="movie-poster w-100">
                        }
                        <div class="movie-overlay position-absolute top-0 start-0 w-100 h-100 d-flex flex-column justify-content-between p-3">
                            <div class="d-flex justify-content-between align-items-start">
                                <div class="movie-rating bg-dark bg-opacity-75 rounded-pill px-3 py-1 text-white">
                                    <i class="fas fa-star text-warning"></i>
                                    <span class="ms-1">@movie.VoteAverage.ToString("0.0")</span>
                                </div>
                                <div class="coming-soon-badge bg-primary rounded-pill px-3 py-1 text-white">
                                    <i class="far fa-calendar-alt me-1"></i>
                                    @movie.ReleaseDate.ToString("dd/MM/yyyy")
                                </div>
                            </div>
                            <div class="movie-actions d-flex gap-2">
                                <a asp-controller="Movie" asp-action="Details" asp-route-id="@movie.Id" 
                                   class="btn btn-light btn-sm rounded-pill flex-grow-1 btn-hover-effect">
                                    <i class="fas fa-info-circle me-1"></i>Chi Tiết
                                </a>
                                <a href="#" class="btn btn-primary btn-sm rounded-pill flex-grow-1 btn-hover-effect">
                                    <i class="fas fa-clock me-1"></i>Sắp Chiếu
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="movie-info p-3 glass-effect">
                        <h5 class="movie-title h5 mb-2 text-truncate">@movie.Title</h5>
                        <div class="movie-meta d-flex align-items-center mb-2 gap-3">
                            <span class="movie-duration text-muted">
                                <i class="far fa-clock me-1"></i>@movie.Duration phút
                            </span>
                            <span class="movie-rating-small text-warning">
                                <i class="fas fa-star me-1"></i>@movie.VoteAverage.ToString("0.0")
                            </span>
                        </div>
                        <div class="movie-description small text-muted mb-0">
                            @(movie.Overview.Length > 100 ? movie.Overview.Substring(0, 100) + "..." : movie.Overview)
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    
    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <div class="empty-state">
                <i class="fas fa-film fa-4x text-muted mb-3"></i>
                <h3>Không có phim sắp chiếu</h3>
                <p class="text-muted">Hiện tại không có phim nào sắp chiếu. Vui lòng quay lại sau.</p>
                <a href="/" class="btn btn-primary rounded-pill mt-3">
                    <i class="fas fa-home me-1"></i>Về Trang Chủ
                </a>
            </div>
        </div>
    }
</div>

@section Styles {
    <style>
        .coming-soon-hero {
            background-color: #0a0a0a;
            padding: 120px 0 100px;
            margin-top: -70px;
            position: relative;
            overflow: hidden;
            min-height: 100vh;
        }
        
        .hero-background {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: url('https://image.tmdb.org/t/p/original/9PqD3wSIjntyJDBzMNuxuKHwpUD.jpg');
            background-size: cover;
            background-position: center;
            filter: blur(3px) brightness(0.3);
            transform: scale(1.1);
            animation: slowZoom 30s infinite alternate;
        }
        
        .hero-particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
        }
        
        .hero-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, 
                rgba(0, 0, 0, 0.95) 0%, 
                rgba(0, 0, 0, 0.8) 50%,
                rgba(0, 0, 0, 0.95) 100%);
            z-index: 1;
        }
        
        .hero-content {
            position: relative;
            z-index: 2;
            padding: 3rem 0;
        }
        
        .hero-header {
            margin-bottom: 4rem;
        }
        
        .hero-icon {
            color: #fff;
            margin-bottom: 2rem;
            opacity: 0.9;
        }
        
        .hero-icon i {
            filter: drop-shadow(0 0 20px rgba(255,255,255,0.3));
        }
        
        .hero-title {
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
            letter-spacing: -1px;
            font-size: 4rem;
            background: linear-gradient(45deg, #fff, #f0f0f0);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            filter: drop-shadow(0 2px 4px rgba(0,0,0,0.3));
        }
        
        .hero-subtitle {
            text-shadow: 0 1px 2px rgba(0,0,0,0.3);
            max-width: 700px;
            margin-left: auto;
            margin-right: auto;
            font-size: 1.3rem;
            color: rgba(255,255,255,0.9);
            font-weight: 300;
        }
        
        .search-wrapper {
            margin: 0 20px;
        }
        
        .search-container {
            position: relative;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 30px;
            padding: 5px 20px;
            display: flex;
            align-items: center;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
        }
        
        .search-container:hover,
        .search-container:focus-within {
            background: rgba(255, 255, 255, 0.15);
            border-color: rgba(255, 255, 255, 0.3);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        }
        
        .search-icon {
            color: rgba(255, 255, 255, 0.7);
            font-size: 1.2rem;
            margin-right: 10px;
        }
        
        .search-input {
            background: transparent;
            border: none;
            color: #fff;
            font-size: 1.1rem;
            padding: 12px 0;
            width: 100%;
            outline: none;
        }
        
        .search-input::placeholder {
            color: rgba(255, 255, 255, 0.6);
            font-weight: 300;
        }
        
        .search-input:focus {
            outline: none;
            box-shadow: none;
        }
        
        .filter-tags {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 15px;
            margin-top: 4rem;
        }
        
        .filter-btn {
            transition: all 0.3s ease;
            border-width: 2px;
            font-weight: 500;
            padding: 12px 30px;
            font-size: 1.1rem;
            position: relative;
            overflow: hidden;
        }
        
        .filter-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(
                120deg,
                transparent,
                rgba(255, 255, 255, 0.2),
                transparent
            );
            transition: all 0.5s ease;
        }
        
        .filter-btn:hover::before {
            left: 100%;
        }
        
        .filter-btn:hover {
            background-color: rgba(255, 255, 255, 0.1);
            color: #fff;
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.3);
        }
        
        .filter-btn.active {
            background-color: #fff;
            color: #2196f3;
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.3);
        }
        
        @@media (max-width: 768px) {
            .coming-soon-hero {
                padding: 100px 0 80px;
            }
            
            .hero-title {
                font-size: 2.5rem;
            }
            
            .hero-subtitle {
                font-size: 1.1rem;
                padding: 0 20px;
            }
            
            .search-container {
                padding: 3px 15px;
            }
            
            .search-input {
                font-size: 1rem;
                padding: 10px 0;
            }
            
            .search-icon {
                font-size: 1rem;
            }
            
            .filter-tags {
                padding: 0 20px;
                gap: 10px;
            }
            
            .filter-btn {
                padding: 8px 20px;
                font-size: 0.9rem;
            }
        }

        /* Additional styles for movie cards */
        .movie-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            background-color: #fff;
        }
        
        .movie-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }
        
        .movie-poster-container {
            position: relative;
            overflow: hidden;
            padding-top: 150%; /* 2:3 aspect ratio */
        }
        
        .movie-poster {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }
        
        .movie-poster-placeholder {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background: linear-gradient(145deg, #2196f3, #1976d2);
            color: white;
            padding: 1rem;
            text-align: center;
        }
        
        .movie-overlay {
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .movie-card:hover .movie-overlay {
            opacity: 1;
        }
        
        .movie-card:hover .movie-poster {
            transform: scale(1.1);
        }
        
        .movie-info {
            padding: 1rem;
            background-color: #fff;
        }
        
        .glass-effect {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
        }
        
        .btn-hover-effect {
            transition: all 0.3s ease;
        }
        
        .btn-hover-effect:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
    </style>
}

@section Scripts {
    <!-- Add particles.js -->
    <script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize particles.js
            particlesJS('particles-js', {
                particles: {
                    number: { value: 80, density: { enable: true, value_area: 800 } },
                    color: { value: '#ffffff' },
                    shape: { type: 'circle' },
                    opacity: { value: 0.5, random: true },
                    size: { value: 3, random: true },
                    line_linked: {
                        enable: true,
                        distance: 150,
                        color: '#ffffff',
                        opacity: 0.2,
                        width: 1
                    },
                    move: {
                        enable: true,
                        speed: 2,
                        direction: 'none',
                        random: true,
                        straight: false,
                        out_mode: 'out',
                        bounce: false
                    }
                },
                interactivity: {
                    detect_on: 'canvas',
                    events: {
                        onhover: { enable: true, mode: 'grab' },
                        onclick: { enable: true, mode: 'push' },
                        resize: true
                    },
                    modes: {
                        grab: { distance: 140, line_linked: { opacity: 0.5 } },
                        push: { particles_nb: 4 }
                    }
                },
                retina_detect: true
            });
            
            // Enhanced search functionality
            const searchInput = document.getElementById('movieSearch');
            const movieItems = document.querySelectorAll('.movie-item');
            
            function performSearch() {
                const searchTerm = searchInput.value.toLowerCase().trim();
                let hasResults = false;
                
                movieItems.forEach(item => {
                    const title = item.querySelector('.movie-title').textContent.toLowerCase();
                    const description = item.querySelector('.movie-description').textContent.toLowerCase();
                    
                    if (title.includes(searchTerm) || description.includes(searchTerm)) {
                        item.style.display = '';
                        item.classList.add('animate__animated', 'animate__fadeIn');
                        hasResults = true;
                    } else {
                        item.style.display = 'none';
                    }
                });
                
                // Toggle search icon color based on results
                const searchIcon = document.querySelector('.search-icon');
                searchIcon.style.color = hasResults ? 'rgba(255, 255, 255, 0.9)' : '#ff6b6b';
            }
            
            // Search on input with debounce
            let searchTimeout;
            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(performSearch, 300);
            });
            
            // Search on Enter key press
            searchInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    performSearch();
                }
            });
            
            // Clear search when input is cleared
            searchInput.addEventListener('search', function() {
                if (this.value === '') {
                    performSearch();
                    document.querySelector('.search-icon').style.color = 'rgba(255, 255, 255, 0.7)';
                }
            });
            
            // Focus effect
            searchInput.addEventListener('focus', function() {
                this.parentElement.classList.add('focused');
            });
            
            searchInput.addEventListener('blur', function() {
                this.parentElement.classList.remove('focused');
            });
            
            // Enhanced filter functionality with animation
            const filterButtons = document.querySelectorAll('.filter-btn');
            
            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    filterButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');
                    
                    const filter = this.getAttribute('data-filter');
                    
                    movieItems.forEach(item => {
                        item.classList.remove('animate__animated', 'animate__fadeIn');
                        
                        setTimeout(() => {
                            if (filter === 'all') {
                                item.style.display = '';
                                item.classList.add('animate__animated', 'animate__fadeIn');
                            } else {
                                const genres = item.getAttribute('data-genres');
                                if (genres && genres.includes(filter)) {
                                    item.style.display = '';
                                    item.classList.add('animate__animated', 'animate__fadeIn');
                                } else {
                                    item.style.display = 'none';
                                }
                            }
                        }, 100);
                    });
                });
            });
        });
    </script>
}

